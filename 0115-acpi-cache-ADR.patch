From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Sun, 14 May 2017 23:53:08 +0000
Subject: [PATCH] acpi: cache ADR

---
 drivers/acpi/acpica/aclocal.h |  1 +
 drivers/acpi/utils.c          | 14 ++++++++++++++
 2 files changed, 15 insertions(+)

diff --git a/drivers/acpi/acpica/aclocal.h b/drivers/acpi/acpica/aclocal.h
index be57436182a1..12bf2cc6bb2d 100644
--- a/drivers/acpi/acpica/aclocal.h
+++ b/drivers/acpi/acpica/aclocal.h
@@ -140,6 +140,7 @@ struct acpi_namespace_node {
 	struct acpi_namespace_node *child;	/* First child */
 	struct acpi_namespace_node *peer;	/* First peer */
 	acpi_owner_id owner_id;	/* Node creator */
+	u64 cached_ADR;		/* Cached value of the _ADR method */
 
 	/*
 	 * The following fields are used by the ASL compiler and disassembler only
diff --git a/drivers/acpi/utils.c b/drivers/acpi/utils.c
index 3b54b8fd7396..0925313da73c 100644
--- a/drivers/acpi/utils.c
+++ b/drivers/acpi/utils.c
@@ -19,6 +19,8 @@
 
 #include "internal.h"
 #include "sleep.h"
+#include "acpica/aclocal.h"
+struct acpi_namespace_node *acpi_ns_validate_handle(acpi_handle handle);
 
 /* --------------------------------------------------------------------------
                             Object Evaluation Helpers
@@ -251,10 +253,18 @@ acpi_evaluate_integer(acpi_handle handle,
 	acpi_status status = AE_OK;
 	union acpi_object element;
 	struct acpi_buffer buffer = { 0, NULL };
+	struct acpi_namespace_node *node;
 
 	if (!data)
 		return AE_BAD_PARAMETER;
 
+	node = acpi_ns_validate_handle(handle);
+	/* the _ADR cache */
+	if (strcmp(pathname, "_ADR") == 0 && node && node->cached_ADR) {
+		*data = node->cached_ADR;
+		return AE_OK;
+	}
+
 	buffer.length = sizeof(union acpi_object);
 	buffer.pointer = &element;
 	status = acpi_evaluate_object(handle, pathname, arguments, &buffer);
@@ -270,6 +280,10 @@ acpi_evaluate_integer(acpi_handle handle,
 
 	*data = element.integer.value;
 
+	if (strcmp(pathname, "_ADR") == 0 && node) {
+		node->cached_ADR = element.integer.value;
+	}
+
 	acpi_handle_debug(handle, "Return value [%llu]\n", *data);
 
 	return AE_OK;
-- 
https://clearlinux.org

